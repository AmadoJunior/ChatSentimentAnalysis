/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil-community/router";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface ChatWindow {
        "match": MatchResults;
    }
    interface MdButton {
        "disabled": boolean;
        "onClick": (event: MouseEvent) => void;
    }
    interface MdLoadingButton {
        "disabled": boolean;
        "loading": boolean;
        "onClick": (event: MouseEvent) => void;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLChatWindowElement extends Components.ChatWindow, HTMLStencilElement {
    }
    var HTMLChatWindowElement: {
        prototype: HTMLChatWindowElement;
        new (): HTMLChatWindowElement;
    };
    interface HTMLMdButtonElement extends Components.MdButton, HTMLStencilElement {
    }
    var HTMLMdButtonElement: {
        prototype: HTMLMdButtonElement;
        new (): HTMLMdButtonElement;
    };
    interface HTMLMdLoadingButtonElement extends Components.MdLoadingButton, HTMLStencilElement {
    }
    var HTMLMdLoadingButtonElement: {
        prototype: HTMLMdLoadingButtonElement;
        new (): HTMLMdLoadingButtonElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "chat-window": HTMLChatWindowElement;
        "md-button": HTMLMdButtonElement;
        "md-loading-button": HTMLMdLoadingButtonElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface ChatWindow {
        "match"?: MatchResults;
    }
    interface MdButton {
        "disabled"?: boolean;
        "onClick"?: (event: MouseEvent) => void;
    }
    interface MdLoadingButton {
        "disabled"?: boolean;
        "loading"?: boolean;
        "onClick"?: (event: MouseEvent) => void;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "chat-window": ChatWindow;
        "md-button": MdButton;
        "md-loading-button": MdLoadingButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "chat-window": LocalJSX.ChatWindow & JSXBase.HTMLAttributes<HTMLChatWindowElement>;
            "md-button": LocalJSX.MdButton & JSXBase.HTMLAttributes<HTMLMdButtonElement>;
            "md-loading-button": LocalJSX.MdLoadingButton & JSXBase.HTMLAttributes<HTMLMdLoadingButtonElement>;
        }
    }
}
